<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Riscks.Resources">
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border   Grid.Column="0" x:Name="MainBorder" BorderBrush="#edc8b7" BorderThickness="0"  Background="Transparent">
                            <TextBlock HorizontalAlignment="Stretch" TextAlignment="Right" Foreground="#171717" Margin="7 0" VerticalAlignment="Center" Text="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                        </Border>
                        <Border Width="{x:Static local:WindowConstants.ComboBoxToggleWidth}" Grid.Column="1" x:Name="border" Background="Transparent" BorderThickness="0" BorderBrush="#f8b03f" CornerRadius="0 0 0 0">
                            <Path Fill="#f8b03f" Data="M 0 0 L 10 0 L 5 5" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="cbi_border" Height="25" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="0" Margin="0 0 0 0" BorderBrush="#d7d7d7" BorderThickness="1 0 1 0" Background="Transparent">
                        <TextBlock Foreground="#171717" x:Name="cbi_tb" VerticalAlignment="Center" Background="Transparent" Margin="{x:Static local:WindowConstants.ThickMargin}" Text="{Binding}" TextAlignment="Right"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                             Value="True">
                            <Setter TargetName="cbi_border" Property="Background" Value="#4CCFEB74" />
                            <Setter TargetName="cbi_border" Property="BorderBrush" Value="#bed258"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="#f8b03f" BorderThickness="0" CornerRadius="0 0 0 0" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton  Grid.Column="0" x:Name="ToggleButton"  BorderThickness="0" BorderBrush="#f8b03f" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                       Style="{StaticResource ToggleButtonStyle}" />

                            <Popup  Grid.Column="0"  AllowsTransparency="True" Placement="Bottom" Focusable="False"  x:Name="Popup" PopupAnimation="Slide"  VerticalOffset="0"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                                <Border Width="{Binding ActualWidth, ElementName=ToggleButton}" Background="White" BorderBrush="#d7d7d7" BorderThickness="0 1 0 1">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="ToggleButton" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <DataTemplate x:Key="DataGridCellComboBox">
        <Border BorderBrush="#edc8b7" Margin="0 0 0 0" MinWidth="{x:Static local:WindowConstants.MaxColumnWidth}" BorderThickness="1 1 1 1" Background="#fbe7de">
            <Grid>
                <ComboBox Style="{StaticResource ComboBoxStyle}"  Padding="{x:Static local:WindowConstants.ThickMargin}" ItemsSource="{Binding ItemsSource, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" BorderThickness="0" SelectedItem="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" />
            </Grid>
        </Border>
    </DataTemplate>

    <Style x:Key="ComboBoxItemStyle_Resource" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="cbi_border" Height="25" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0 0 0 0" BorderBrush="#d7d7d7" BorderThickness="1 0 1 0" Background="Transparent">
                        <TextBlock x:Name="cbi_tb" Foreground="#171717" VerticalAlignment="Center" Background="Transparent" Padding="7 0" Text="{Binding}" TextAlignment="Left"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                             Value="True">
                            <Setter TargetName="cbi_border" Property="Background" Value="#4CCFEB74" />
                            <Setter TargetName="cbi_border" Property="BorderBrush" Value="#bed258"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyle_Resource" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border   Grid.Column="0" x:Name="MainBorder" BorderBrush="#d7d7d7" BorderThickness="0"  Background="Transparent">
                            <TextBlock HorizontalAlignment="Stretch" TextAlignment="Left" Foreground="#171717" Padding="7 0" VerticalAlignment="Center" Text="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                        </Border>
                        <Border Width="{x:Static local:WindowConstants.ComboBoxToggleWidth}" Grid.Column="1" x:Name="border" Background="Transparent" BorderThickness="0" BorderBrush="#f8b03f" CornerRadius="0 0 0 0">
                            <Path Fill="#f8b03f" Data="M 0 0 L 10 0 L 5 5" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxStyle_Resource" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle_Resource}"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="#f8b03f" BorderThickness="0" CornerRadius="0 0 0 0" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="*" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton Grid.Column="0" BorderBrush="#f8b03f" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" x:Name="ToggleButton"
                       Style="{StaticResource ToggleButtonStyle_Resource}" />

                            <Popup  Grid.Column="0"  AllowsTransparency="True" Placement="Bottom" Focusable="False"  x:Name="Popup" PopupAnimation="Slide"  VerticalOffset="0"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                                <Border Width="{Binding ActualWidth, ElementName=ToggleButton}" Background="White" BorderBrush="#d7d7d7" BorderThickness="0 1 0 1">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="DataGridCellComboBox_Resource">
        <Border BorderBrush="#edc8b7" Margin="0 0 0 0"  BorderThickness="1 1 1 1" Background="#fbe7de">
            <Grid>
                <ComboBox Style="{StaticResource ComboBoxStyle_Resource}"  Padding="{x:Static local:WindowConstants.ThickMargin}"  ItemsSource="{Binding ItemsSource, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" BorderThickness="0" SelectedItem="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" />
            </Grid>
        </Border>
    </DataTemplate>


    <Style x:Key="ComboBoxStyle_Single" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="#DEDEDE" BorderThickness="1" CornerRadius="0 0 0 0" Background="White">
                        <Grid>
                            <ToggleButton  Grid.Column="0" x:Name="ToggleButton"  BorderThickness="0" BorderBrush="#f8b03f" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                       Style="{StaticResource ToggleButtonStyle}" />

                            <Popup  Grid.Column="0"  AllowsTransparency="True" Placement="Bottom" Focusable="False"  x:Name="Popup" PopupAnimation="Slide"  VerticalOffset="0"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                                <Border Width="{Binding ActualWidth, Converter={StaticResource PopupWidthConverter}, ElementName=ToggleButton}" Background="White" BorderBrush="#edc8b7" BorderThickness="0 1 0 1">
                                    <ItemsPresenter />
                                </Border>
                            </Popup>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="ToggleButton" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxItemStyle_Property" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="cbi_border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="0" Margin="0 0 0 0" BorderBrush="#E6E2E7" BorderThickness="1 0 1 0" Background="Transparent">
                        <TextBlock FontSize="15" FontFamily="Calibri" Foreground="#141414" x:Name="cbi_tb" VerticalAlignment="Stretch" Background="Transparent" Padding="9 4" Text="{Binding}" TextAlignment="Right"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                             Value="True">
                            <Setter TargetName="cbi_border" Property="Background" Value="#4Cbfd35b" />
                            <Setter TargetName="cbi_border" Property="BorderBrush" Value="#bfd35b"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="ComboBoxItemStyle_Property_2" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="cbi_border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="0" Margin="0 0 0 0" BorderBrush="#bfd35b" BorderThickness="1 0 1 0" Background="Transparent">
                        <TextBlock Foreground="#141414" x:Name="cbi_tb" VerticalAlignment="Stretch" Background="Transparent" Padding="{x:Static local:WindowConstants.ThickMargin}" Text="{Binding Name}" TextAlignment="Right"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                             Value="True">
                            <Setter TargetName="cbi_border" Property="Background" Value="#4Cbfd35b" />
                            <Setter TargetName="cbi_border" Property="BorderBrush" Value="#bfd35b"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style x:Key="ToggleButtonStyle_Property" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border  Padding="9 4 9 4" Grid.Column="0" x:Name="MainBorder"  Background="White">
                            <TextBlock HorizontalAlignment="Stretch" TextAlignment="Right" Foreground="#141414" VerticalAlignment="Center" Text="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                        </Border>
                        <Border Width="22" VerticalAlignment="Stretch" Grid.Column="1" x:Name="border" Background="White" BorderThickness="1 0 0 0" BorderBrush="White" CornerRadius="0 0 0 0">
                            <Path x:Name="toggle" Margin="0 3 0 0" Width="8" Height="5" Fill="#E9A844" Stretch="Fill" Data="M 0 0 L 10 0 L 5 5" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="ComboBox.IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="BorderBrush" Value="#e5e5e5"/>
                                <Setter TargetName="toggle" Property="Fill" Value="#bfd35b"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="ComboBox.IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="BorderBrush" Value="#d9ee66"/>
                                <Setter TargetName="toggle" Property="Fill" Value="#bfd35b"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>                    
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="ComboBoxStyle_Property_2" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle_Property}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                            <Border  x:Name="bg2" BorderThickness="1" BorderBrush="#ffffff"  Background="#ffffff">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton  Grid.Column="0" x:Name="ToggleButton"  BorderThickness="0" Background="White" BorderBrush="#bfd35b" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                       Style="{StaticResource ToggleButtonStyle_Property}" />

                                    <Popup  Grid.Column="0"  AllowsTransparency="True" Placement="Bottom" Focusable="False"  x:Name="Popup" PopupAnimation="Slide"  VerticalOffset="0"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                                <Border Width="{Binding ActualWidth, Converter={StaticResource PopupWidthConverter}, ElementName=ToggleButton}" Background="White" BorderBrush="#E6E2E7" BorderThickness="0 1 0 1">
                                            <ItemsPresenter />
                                        </Border>
                                    </Popup>
                                </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBox.IsMouseOver" Value="True" >
                            <Setter TargetName="bg2" Property="BorderBrush" Value="#e5e5e5"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" >
                            <Setter TargetName="bg2" Property="BorderBrush" Value="#d9ee66"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsSelected" Value="True">
                            <Setter TargetName="bg2" Property="BorderBrush" Value="#d9ee66"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
<!--
    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    <Style x:Key="ToggleButtonStyle_Property_2" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border   Grid.Column="0" x:Name="MainBorder" BorderBrush="#bfd35b" BorderThickness="0"  Background="White">
                            <TextBlock HorizontalAlignment="Stretch" TextAlignment="Right" Foreground="#220022" Padding="{x:Static local:WindowConstants.ThickMargin}" VerticalAlignment="Center" Text="{Binding SelectedItem.Name, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                        </Border>
                        <Border Width="{x:Static local:WindowConstants.ComboBoxToggleWidth}" Grid.Column="1" x:Name="border" Background="White" BorderThickness="0" BorderBrush="#bfd35b" CornerRadius="0 0 0 0">
                            <Path x:Name="toggle" Fill="#ababab" Data="M 0 0 L 10 0 L 5 5" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="1 0 0 0"/>
                            <Setter TargetName="toggle" Property="Fill" Value="#bfd35b"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="1 0 0 0"/>
                            <Setter TargetName="toggle" Property="Fill" Value="#bfd35b"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

-->
<!--
    <Style x:Key="ComboBoxStyle_Property_3" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle_Property_2}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" x:Name="bg" BorderThickness="1" CornerRadius="0 0 0 0" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton  Grid.Column="0" x:Name="ToggleButton"  BorderThickness="0" Background="White" BorderBrush="#bfd35b" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                       Style="{StaticResource ToggleButtonStyle_Property_2}" />

                            <Popup  Grid.Column="0"  AllowsTransparency="True" Placement="Bottom" Focusable="False"  x:Name="Popup" PopupAnimation="Slide"  VerticalOffset="0"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                                <Border Width="{Binding ActualWidth, Converter={StaticResource PopupWidthConverter}, ElementName=ToggleButton}" Background="White" BorderBrush="#bfd35b" BorderThickness="0 1 0 1">
                                    <ItemsPresenter />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="bg" Property="BorderBrush" Value="#bfd35b"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" >
                            <Setter TargetName="bg" Property="BorderBrush" Value="#bfd35b"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->


</ResourceDictionary>